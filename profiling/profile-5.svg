<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>REMOVE-DUPLICATE-POSITIONS (8 samples, 0.01%)</title><rect x="377.2" y="293" width="0.1" height="15.0" fill="rgb(225,174,34)" rx="2" ry="2" />
<text  x="380.18" y="303.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (16 samples, 0.02%)</title><rect x="118.1" y="181" width="0.3" height="15.0" fill="rgb(244,74,5)" rx="2" ry="2" />
<text  x="121.13" y="191.5" ></text>
</g>
<g >
<title>%%WAIT-FOR-MUTEX (3,240 samples, 4.24%)</title><rect x="326.0" y="293" width="50.1" height="15.0" fill="rgb(254,92,7)" rx="2" ry="2" />
<text  x="329.04" y="303.5" >%%WAI..</text>
</g>
<g >
<title>ABS (8 samples, 0.01%)</title><rect x="1003.8" y="261" width="0.1" height="15.0" fill="rgb(219,121,30)" rx="2" ry="2" />
<text  x="1006.75" y="271.5" ></text>
</g>
<g >
<title>TARGET-MAIN.LISP&quot;) (19 samples, 0.02%)</title><rect x="118.1" y="229" width="0.3" height="15.0" fill="rgb(245,111,38)" rx="2" ry="2" />
<text  x="121.09" y="239.5" ></text>
</g>
<g >
<title>all (76,344 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(234,222,35)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>ARRAY-TOTAL-SIZE (17 samples, 0.02%)</title><rect x="942.1" y="245" width="0.3" height="15.0" fill="rgb(249,145,25)" rx="2" ry="2" />
<text  x="945.11" y="255.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (126 samples, 0.17%)</title><rect x="964.7" y="213" width="1.9" height="15.0" fill="rgb(213,134,54)" rx="2" ry="2" />
<text  x="967.66" y="223.5" ></text>
</g>
<g >
<title>BUMPINESS (7,654 samples, 10.03%)</title><rect x="972.6" y="277" width="118.3" height="15.0" fill="rgb(238,183,27)" rx="2" ry="2" />
<text  x="975.61" y="287.5" >BUMPINESS</text>
</g>
<g >
<title>(SB-PCL::FAST-METHOD CHILDREN (NODE)) (15 samples, 0.02%)</title><rect x="734.3" y="309" width="0.2" height="15.0" fill="rgb(233,118,10)" rx="2" ry="2" />
<text  x="737.28" y="319.5" ></text>
</g>
<g >
<title>ASH (32 samples, 0.04%)</title><rect x="1147.5" y="245" width="0.5" height="15.0" fill="rgb(230,195,53)" rx="2" ry="2" />
<text  x="1150.46" y="255.5" ></text>
</g>
<g >
<title>BRAID.LISP&quot;) (224 samples, 0.29%)</title><rect x="1076.8" y="181" width="3.4" height="15.0" fill="rgb(243,72,19)" rx="2" ry="2" />
<text  x="1079.75" y="191.5" ></text>
</g>
<g >
<title>POPULATE-CACHE (188 samples, 0.25%)</title><rect x="379.0" y="325" width="2.9" height="15.0" fill="rgb(214,188,39)" rx="2" ry="2" />
<text  x="381.97" y="335.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (26 samples, 0.03%)</title><rect x="1089.6" y="229" width="0.4" height="15.0" fill="rgb(221,111,26)" rx="2" ry="2" />
<text  x="1092.63" y="239.5" ></text>
</g>
<g >
<title>CALL-WITH-RECURSIVE-SYSTEM-LOCK (56 samples, 0.07%)</title><rect x="381.0" y="261" width="0.8" height="15.0" fill="rgb(243,97,32)" rx="2" ry="2" />
<text  x="383.98" y="271.5" ></text>
</g>
<g >
<title>TWO-ARG-* (8 samples, 0.01%)</title><rect x="1189.4" y="277" width="0.2" height="15.0" fill="rgb(210,12,29)" rx="2" ry="2" />
<text  x="1192.44" y="287.5" ></text>
</g>
<g >
<title>COLUMN-HEIGHT (5,574 samples, 7.30%)</title><rect x="1003.9" y="261" width="86.1" height="15.0" fill="rgb(252,184,1)" rx="2" ry="2" />
<text  x="1006.87" y="271.5" >COLUMN-HEI..</text>
</g>
<g >
<title>(SB-VM::OPTIMIZED-DATA-VECTOR-REF (UNSIGNED-BYTE 15)) (132 samples, 0.17%)</title><rect x="1080.2" y="213" width="2.1" height="15.0" fill="rgb(238,8,38)" rx="2" ry="2" />
<text  x="1083.21" y="223.5" ></text>
</g>
<g >
<title>ASH (46 samples, 0.06%)</title><rect x="1057.0" y="229" width="0.8" height="15.0" fill="rgb(222,73,54)" rx="2" ry="2" />
<text  x="1060.04" y="239.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (14 samples, 0.02%)</title><rect x="118.2" y="149" width="0.2" height="15.0" fill="rgb(211,104,22)" rx="2" ry="2" />
<text  x="121.16" y="159.5" ></text>
</g>
<g >
<title>DESTROY-TREE (718 samples, 0.94%)</title><rect x="231.2" y="341" width="11.1" height="15.0" fill="rgb(249,210,34)" rx="2" ry="2" />
<text  x="234.18" y="351.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (10 samples, 0.01%)</title><rect x="971.8" y="229" width="0.2" height="15.0" fill="rgb(238,91,30)" rx="2" ry="2" />
<text  x="974.83" y="239.5" ></text>
</g>
<g >
<title>ASH (27 samples, 0.04%)</title><rect x="954.2" y="229" width="0.4" height="15.0" fill="rgb(213,202,48)" rx="2" ry="2" />
<text  x="957.20" y="239.5" ></text>
</g>
<g >
<title>TWO-ARG-AND (63 samples, 0.08%)</title><rect x="1087.7" y="213" width="1.0" height="15.0" fill="rgb(211,110,34)" rx="2" ry="2" />
<text  x="1090.69" y="223.5" ></text>
</g>
<g >
<title>ASH (184 samples, 0.24%)</title><rect x="1082.3" y="213" width="2.8" height="15.0" fill="rgb(216,79,47)" rx="2" ry="2" />
<text  x="1085.25" y="223.5" ></text>
</g>
<g >
<title>(FLET SB-C::WITH-IT :IN SB-C::%WITH-COMPILATION-UNIT) (20 samples, 0.03%)</title><rect x="118.1" y="277" width="0.3" height="15.0" fill="rgb(243,98,50)" rx="2" ry="2" />
<text  x="121.07" y="287.5" ></text>
</g>
<g >
<title>POSSIBLE-PLACEMENTS (61 samples, 0.08%)</title><rect x="376.4" y="341" width="1.0" height="15.0" fill="rgb(232,147,30)" rx="2" ry="2" />
<text  x="379.41" y="351.5" ></text>
</g>
<g >
<title>GETHASH/EQUAL (7 samples, 0.01%)</title><rect x="377.0" y="293" width="0.1" height="15.0" fill="rgb(237,54,46)" rx="2" ry="2" />
<text  x="380.03" y="303.5" ></text>
</g>
<g >
<title>GENERATE-CHILDREN! (71 samples, 0.09%)</title><rect x="376.3" y="357" width="1.1" height="15.0" fill="rgb(219,209,52)" rx="2" ry="2" />
<text  x="379.25" y="367.5" ></text>
</g>
<g >
<title>COLUMN-HEIGHT (2,944 samples, 3.86%)</title><rect x="926.5" y="261" width="45.5" height="15.0" fill="rgb(221,34,13)" rx="2" ry="2" />
<text  x="929.48" y="271.5" >COLU..</text>
</g>
<g >
<title>GETHASH/ANY/LOCK (30 samples, 0.04%)</title><rect x="241.8" y="325" width="0.5" height="15.0" fill="rgb(240,86,20)" rx="2" ry="2" />
<text  x="244.81" y="335.5" ></text>
</g>
<g >
<title>PROPAGATE-HEURISTIC-VALUES! (40,886 samples, 53.55%)</title><rect x="558.1" y="341" width="631.9" height="15.0" fill="rgb(252,137,36)" rx="2" ry="2" />
<text  x="561.05" y="351.5" >PROPAGATE-HEURISTIC-VALUES!</text>
</g>
<g >
<title>FULL-SQUARE-P (1,998 samples, 2.62%)</title><rect x="1057.8" y="229" width="30.9" height="15.0" fill="rgb(253,124,54)" rx="2" ry="2" />
<text  x="1060.79" y="239.5" >FU..</text>
</g>
<g >
<title>PCL (26 samples, 0.03%)</title><rect x="1089.6" y="213" width="0.4" height="15.0" fill="rgb(211,6,18)" rx="2" ry="2" />
<text  x="1092.63" y="223.5" ></text>
</g>
<g >
<title>CALL-WITH-RECURSIVE-SYSTEM-LOCK (20 samples, 0.03%)</title><rect x="242.0" y="309" width="0.3" height="15.0" fill="rgb(245,224,47)" rx="2" ry="2" />
<text  x="244.97" y="319.5" ></text>
</g>
<g >
<title>EMPTY-SQUARE-P (3,530 samples, 4.62%)</title><rect x="1034.1" y="245" width="54.6" height="15.0" fill="rgb(246,225,37)" rx="2" ry="2" />
<text  x="1037.11" y="255.5" >EMPTY..</text>
</g>
<g >
<title>Some binary code (92 samples, 0.12%)</title><rect x="1188.0" y="277" width="1.4" height="15.0" fill="rgb(216,219,38)" rx="2" ry="2" />
<text  x="1191.02" y="287.5" ></text>
</g>
<g >
<title>(FLET &quot;WITHOUT-INTERRUPTS-BODY-29&quot; :IN SB-THREAD::CALL-WITH-RECURSIVE-LOCK) (24 samples, 0.03%)</title><rect x="118.0" y="341" width="0.4" height="15.0" fill="rgb(243,12,25)" rx="2" ry="2" />
<text  x="121.01" y="351.5" ></text>
</g>
<g >
<title>ASH (114 samples, 0.15%)</title><rect x="1166.9" y="229" width="1.7" height="15.0" fill="rgb(213,29,29)" rx="2" ry="2" />
<text  x="1169.86" y="239.5" ></text>
</g>
<g >
<title>EMPTY-SQUARE-P (1,868 samples, 2.45%)</title><rect x="942.4" y="245" width="28.9" height="15.0" fill="rgb(232,121,27)" rx="2" ry="2" />
<text  x="945.40" y="255.5" >EM..</text>
</g>
<g >
<title>(FLET &quot;LAMBDA0&quot; :IN &quot;SYS:SRC (19 samples, 0.02%)</title><rect x="118.1" y="261" width="0.3" height="15.0" fill="rgb(238,129,36)" rx="2" ry="2" />
<text  x="121.09" y="271.5" ></text>
</g>
<g >
<title>FULL-SQUARE-P (1,077 samples, 1.41%)</title><rect x="954.6" y="229" width="16.7" height="15.0" fill="rgb(238,133,34)" rx="2" ry="2" />
<text  x="957.63" y="239.5" ></text>
</g>
<g >
<title>(FLET &quot;CLEANUP-FUN-69&quot; :IN SB-THREAD::CALL-WITH-RECURSIVE-SYSTEM-LOCK) (28 samples, 0.04%)</title><rect x="381.4" y="245" width="0.4" height="15.0" fill="rgb(222,170,20)" rx="2" ry="2" />
<text  x="384.42" y="255.5" ></text>
</g>
<g >
<title>PCL (10 samples, 0.01%)</title><rect x="971.8" y="213" width="0.2" height="15.0" fill="rgb(235,160,32)" rx="2" ry="2" />
<text  x="974.83" y="223.5" ></text>
</g>
<g >
<title>BRAID.LISP&quot;) (126 samples, 0.17%)</title><rect x="964.7" y="181" width="1.9" height="15.0" fill="rgb(249,127,14)" rx="2" ry="2" />
<text  x="967.66" y="191.5" ></text>
</g>
<g >
<title>RUN-THREAD (9 samples, 0.01%)</title><rect x="376.1" y="341" width="0.2" height="15.0" fill="rgb(227,80,19)" rx="2" ry="2" />
<text  x="379.11" y="351.5" ></text>
</g>
<g >
<title>(SB-PCL::FAST-METHOD CHILDREN (NODE)) (15 samples, 0.02%)</title><rect x="1189.6" y="293" width="0.3" height="15.0" fill="rgb(209,226,46)" rx="2" ry="2" />
<text  x="1192.64" y="303.5" ></text>
</g>
<g >
<title>GET-WORST-PIECE (51 samples, 0.07%)</title><rect x="376.6" y="325" width="0.8" height="15.0" fill="rgb(222,126,14)" rx="2" ry="2" />
<text  x="379.56" y="335.5" ></text>
</g>
<g >
<title>Some binary code (36 samples, 0.05%)</title><rect x="972.0" y="261" width="0.6" height="15.0" fill="rgb(227,82,6)" rx="2" ry="2" />
<text  x="975.05" y="271.5" ></text>
</g>
<g >
<title>BRAID.LISP&quot;) (26 samples, 0.03%)</title><rect x="1089.6" y="197" width="0.4" height="15.0" fill="rgb(220,204,47)" rx="2" ry="2" />
<text  x="1092.63" y="207.5" ></text>
</g>
<g >
<title>TWO-ARG-AND (35 samples, 0.05%)</title><rect x="1187.1" y="245" width="0.6" height="15.0" fill="rgb(251,177,16)" rx="2" ry="2" />
<text  x="1190.13" y="255.5" ></text>
</g>
<g >
<title>JOIN-THREAD (6,480 samples, 8.49%)</title><rect x="276.0" y="341" width="100.1" height="15.0" fill="rgb(246,90,28)" rx="2" ry="2" />
<text  x="278.96" y="351.5" >JOIN-THREAD</text>
</g>
<g >
<title>PROPAGATE-HEURISTIC-VALUES! (35,185 samples, 46.09%)</title><rect x="646.2" y="325" width="543.8" height="15.0" fill="rgb(206,169,41)" rx="2" ry="2" />
<text  x="649.17" y="335.5" >PROPAGATE-HEURISTIC-VALUES!</text>
</g>
<g >
<title>PCL (224 samples, 0.29%)</title><rect x="1076.8" y="197" width="3.4" height="15.0" fill="rgb(228,63,54)" rx="2" ry="2" />
<text  x="1079.75" y="207.5" ></text>
</g>
<g >
<title>(LAMBDA (&amp;REST SB-PCL::ARGS) :IN SB-PCL::INSTALL-INITIAL-CONSTRUCTOR) (27 samples, 0.04%)</title><rect x="118.0" y="389" width="0.4" height="15.0" fill="rgb(217,83,4)" rx="2" ry="2" />
<text  x="120.96" y="399.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (7 samples, 0.01%)</title><rect x="1034.0" y="229" width="0.1" height="15.0" fill="rgb(251,53,52)" rx="2" ry="2" />
<text  x="1036.98" y="239.5" ></text>
</g>
<g >
<title>HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS (72 samples, 0.09%)</title><rect x="1186.0" y="245" width="1.1" height="15.0" fill="rgb(212,36,6)" rx="2" ry="2" />
<text  x="1189.01" y="255.5" ></text>
</g>
<g >
<title>(SB-VM::OPTIMIZED-DATA-VECTOR-REF (UNSIGNED-BYTE 15)) (81 samples, 0.11%)</title><rect x="1183.5" y="245" width="1.3" height="15.0" fill="rgb(236,45,26)" rx="2" ry="2" />
<text  x="1186.52" y="255.5" ></text>
</g>
<g >
<title>Some binary code (55 samples, 0.07%)</title><rect x="1090.1" y="261" width="0.8" height="15.0" fill="rgb(241,216,32)" rx="2" ry="2" />
<text  x="1093.06" y="271.5" ></text>
</g>
<g >
<title>ARRAY-TOTAL-SIZE (17 samples, 0.02%)</title><rect x="1033.6" y="245" width="0.2" height="15.0" fill="rgb(221,79,0)" rx="2" ry="2" />
<text  x="1036.55" y="255.5" ></text>
</g>
<g >
<title>HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS (110 samples, 0.14%)</title><rect x="969.2" y="213" width="1.7" height="15.0" fill="rgb(241,120,15)" rx="2" ry="2" />
<text  x="972.22" y="223.5" ></text>
</g>
<g >
<title>(SB-PCL::FAST-METHOD ADVANCE (BRUTE-SEARCHER)) (69,332 samples, 90.82%)</title><rect x="118.4" y="389" width="1071.6" height="15.0" fill="rgb(205,198,28)" rx="2" ry="2" />
<text  x="121.38" y="399.5" >(SB-PCL::FAST-METHOD ADVANCE (BRUTE-SEARCHER))</text>
</g>
<g >
<title>PUTHASH/ANY/LOCK (84 samples, 0.11%)</title><rect x="380.6" y="277" width="1.2" height="15.0" fill="rgb(250,0,4)" rx="2" ry="2" />
<text  x="383.55" y="287.5" ></text>
</g>
<g >
<title>BRAID.LISP&quot;) (7 samples, 0.01%)</title><rect x="1034.0" y="197" width="0.1" height="15.0" fill="rgb(254,204,25)" rx="2" ry="2" />
<text  x="1036.98" y="207.5" ></text>
</g>
<g >
<title>PROPAGATE-HEURISTIC-VALUES! (46,585 samples, 61.02%)</title><rect x="470.0" y="357" width="720.0" height="15.0" fill="rgb(246,59,15)" rx="2" ry="2" />
<text  x="472.97" y="367.5" >PROPAGATE-HEURISTIC-VALUES!</text>
</g>
<g >
<title>PROPAGATE-HEURISTIC-VALUES! (52,284 samples, 68.48%)</title><rect x="381.9" y="373" width="808.1" height="15.0" fill="rgb(233,39,12)" rx="2" ry="2" />
<text  x="384.88" y="383.5" >PROPAGATE-HEURISTIC-VALUES!</text>
</g>
<g >
<title>BRAID.LISP&quot;) (147 samples, 0.19%)</title><rect x="1162.9" y="197" width="2.3" height="15.0" fill="rgb(211,208,9)" rx="2" ry="2" />
<text  x="1165.92" y="207.5" ></text>
</g>
<g >
<title>GETHASH/ANY/LOCK (372 samples, 0.49%)</title><rect x="236.0" y="309" width="5.8" height="15.0" fill="rgb(212,22,40)" rx="2" ry="2" />
<text  x="239.00" y="319.5" ></text>
</g>
<g >
<title>HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS (147 samples, 0.19%)</title><rect x="1168.7" y="229" width="2.2" height="15.0" fill="rgb(231,155,47)" rx="2" ry="2" />
<text  x="1171.67" y="239.5" ></text>
</g>
<g >
<title>ASH (79 samples, 0.10%)</title><rect x="1184.8" y="245" width="1.2" height="15.0" fill="rgb(236,194,17)" rx="2" ry="2" />
<text  x="1187.78" y="255.5" ></text>
</g>
<g >
<title>(SB-PCL::FAST-METHOD CHILDREN (NODE)) (9 samples, 0.01%)</title><rect x="233.6" y="325" width="0.1" height="15.0" fill="rgb(228,54,8)" rx="2" ry="2" />
<text  x="236.59" y="335.5" ></text>
</g>
<g >
<title>POPULATE-CACHE (223 samples, 0.29%)</title><rect x="378.4" y="341" width="3.5" height="15.0" fill="rgb(215,214,9)" rx="2" ry="2" />
<text  x="381.43" y="351.5" ></text>
</g>
<g >
<title>(SB-VM::OPTIMIZED-DATA-VECTOR-REF (UNSIGNED-BYTE 15)) (108 samples, 0.14%)</title><rect x="1165.2" y="229" width="1.7" height="15.0" fill="rgb(222,114,47)" rx="2" ry="2" />
<text  x="1168.19" y="239.5" ></text>
</g>
<g >
<title>DLISP3.LISP&quot;) (20 samples, 0.03%)</title><rect x="822.5" y="261" width="0.3" height="15.0" fill="rgb(248,228,31)" rx="2" ry="2" />
<text  x="825.54" y="271.5" ></text>
</g>
<g >
<title>%WAIT-FOR-MUTEX (4,320 samples, 5.66%)</title><rect x="309.3" y="309" width="66.8" height="15.0" fill="rgb(242,91,36)" rx="2" ry="2" />
<text  x="312.34" y="319.5" >%WAIT-F..</text>
</g>
<g >
<title>TWO-ARG-AND (23 samples, 0.03%)</title><rect x="970.9" y="213" width="0.4" height="15.0" fill="rgb(209,184,12)" rx="2" ry="2" />
<text  x="973.92" y="223.5" ></text>
</g>
<g >
<title>FULL-SQUARE-P (9 samples, 0.01%)</title><rect x="1091.0" y="277" width="0.2" height="15.0" fill="rgb(244,100,30)" rx="2" ry="2" />
<text  x="1094.05" y="287.5" ></text>
</g>
<g >
<title>(FLET &quot;CLEANUP-FUN-69&quot; :IN SB-THREAD::CALL-WITH-RECURSIVE-SYSTEM-LOCK) (10 samples, 0.01%)</title><rect x="242.1" y="293" width="0.2" height="15.0" fill="rgb(229,225,31)" rx="2" ry="2" />
<text  x="245.12" y="303.5" ></text>
</g>
<g >
<title>RUN-SEARCHER (76,344 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(221,90,24)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >RUN-SEARCHER</text>
</g>
<g >
<title>(LAMBDA (STATE) :IN GET-HEURISTIC-EVAL) (23,731 samples, 31.08%)</title><rect x="822.8" y="293" width="366.8" height="15.0" fill="rgb(246,87,37)" rx="2" ry="2" />
<text  x="825.85" y="303.5" >(LAMBDA (STATE) :IN GET-HEURISTIC-EVAL)</text>
</g>
<g >
<title>Some binary code (9 samples, 0.01%)</title><rect x="734.6" y="293" width="0.2" height="15.0" fill="rgb(210,39,35)" rx="2" ry="2" />
<text  x="737.62" y="303.5" ></text>
</g>
<g >
<title>POPULATE-CACHE (144 samples, 0.19%)</title><rect x="379.7" y="309" width="2.2" height="15.0" fill="rgb(222,91,15)" rx="2" ry="2" />
<text  x="382.65" y="319.5" ></text>
</g>
<g >
<title>PCL (126 samples, 0.17%)</title><rect x="964.7" y="197" width="1.9" height="15.0" fill="rgb(245,201,42)" rx="2" ry="2" />
<text  x="967.66" y="207.5" ></text>
</g>
<g >
<title>GET-PLACEMENTS (41 samples, 0.05%)</title><rect x="376.7" y="309" width="0.7" height="15.0" fill="rgb(205,88,30)" rx="2" ry="2" />
<text  x="379.72" y="319.5" ></text>
</g>
<g >
<title>EMPTY-SQUARE-P (9 samples, 0.01%)</title><rect x="1090.9" y="277" width="0.1" height="15.0" fill="rgb(240,2,43)" rx="2" ry="2" />
<text  x="1093.91" y="287.5" ></text>
</g>
<g >
<title>DESTROY-TREE (522 samples, 0.68%)</title><rect x="233.7" y="325" width="8.1" height="15.0" fill="rgb(240,25,32)" rx="2" ry="2" />
<text  x="236.75" y="335.5" ></text>
</g>
<g >
<title>EXPAND-NODES! (8,736 samples, 11.44%)</title><rect x="242.3" y="373" width="135.1" height="15.0" fill="rgb(247,206,44)" rx="2" ry="2" />
<text  x="245.32" y="383.5" >EXPAND-NODES!</text>
</g>
<g >
<title>COMPILER (19 samples, 0.02%)</title><rect x="118.1" y="245" width="0.3" height="15.0" fill="rgb(217,221,51)" rx="2" ry="2" />
<text  x="121.09" y="255.5" ></text>
</g>
<g >
<title>(FLET SB-THREAD::WITH-RECURSIVE-LOCK-THUNK :IN SB-PCL::INSTALL-OPTIMIZED-CONSTRUCTOR) (23 samples, 0.03%)</title><rect x="118.0" y="325" width="0.4" height="15.0" fill="rgb(209,113,4)" rx="2" ry="2" />
<text  x="121.02" y="335.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (118 samples, 0.15%)</title><rect x="1181.7" y="245" width="1.8" height="15.0" fill="rgb(253,102,35)" rx="2" ry="2" />
<text  x="1184.70" y="255.5" ></text>
</g>
<g >
<title>(FLET &quot;WITHOUT-INTERRUPTS-BODY-2&quot; :IN SB-THREAD:JOIN-THREAD) (5,400 samples, 7.07%)</title><rect x="292.7" y="325" width="83.4" height="15.0" fill="rgb(238,38,49)" rx="2" ry="2" />
<text  x="295.65" y="335.5" >(FLET "WI..</text>
</g>
<g >
<title>CALL-WITH-RECURSIVE-LOCK (25 samples, 0.03%)</title><rect x="118.0" y="357" width="0.4" height="15.0" fill="rgb(235,202,21)" rx="2" ry="2" />
<text  x="120.99" y="367.5" ></text>
</g>
<g >
<title>FULL-SQUARE-P (1,532 samples, 2.01%)</title><rect x="1148.0" y="245" width="23.6" height="15.0" fill="rgb(213,155,30)" rx="2" ry="2" />
<text  x="1150.96" y="255.5" >F..</text>
</g>
<g >
<title>BRAID.LISP&quot;) (118 samples, 0.15%)</title><rect x="1181.7" y="213" width="1.8" height="15.0" fill="rgb(228,59,23)" rx="2" ry="2" />
<text  x="1184.70" y="223.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (10 samples, 0.01%)</title><rect x="118.2" y="85" width="0.2" height="15.0" fill="rgb(227,135,50)" rx="2" ry="2" />
<text  x="121.23" y="95.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (11 samples, 0.01%)</title><rect x="118.2" y="101" width="0.2" height="15.0" fill="rgb(244,183,34)" rx="2" ry="2" />
<text  x="121.21" y="111.5" ></text>
</g>
<g >
<title>(SB-VM::OPTIMIZED-DATA-VECTOR-REF (UNSIGNED-BYTE 15)) (72 samples, 0.09%)</title><rect x="966.6" y="213" width="1.1" height="15.0" fill="rgb(210,107,16)" rx="2" ry="2" />
<text  x="969.61" y="223.5" ></text>
</g>
<g >
<title>FULL-SQUARE-P (11 samples, 0.01%)</title><rect x="971.3" y="245" width="0.1" height="15.0" fill="rgb(209,51,48)" rx="2" ry="2" />
<text  x="974.28" y="255.5" ></text>
</g>
<g >
<title>(FLET SB-UNIX::BODY :IN SB-THREAD::FUTEX-WAIT) (2,160 samples, 2.83%)</title><rect x="342.7" y="277" width="33.4" height="15.0" fill="rgb(237,207,7)" rx="2" ry="2" />
<text  x="345.73" y="287.5" >(F..</text>
</g>
<g >
<title>FIND-SOURCE-PATHS (18 samples, 0.02%)</title><rect x="118.1" y="213" width="0.3" height="15.0" fill="rgb(229,128,53)" rx="2" ry="2" />
<text  x="121.10" y="223.5" ></text>
</g>
<g >
<title>%PUTHASH (7 samples, 0.01%)</title><rect x="118.3" y="37" width="0.1" height="15.0" fill="rgb(219,189,19)" rx="2" ry="2" />
<text  x="121.27" y="47.5" ></text>
</g>
<g >
<title>COLUMN-HEIGHT (19 samples, 0.02%)</title><rect x="1033.8" y="245" width="0.3" height="15.0" fill="rgb(244,68,5)" rx="2" ry="2" />
<text  x="1036.81" y="255.5" ></text>
</g>
<g >
<title>FULL-SQUARE-P (1,037 samples, 1.36%)</title><rect x="1171.6" y="261" width="16.1" height="15.0" fill="rgb(213,135,31)" rx="2" ry="2" />
<text  x="1174.64" y="271.5" ></text>
</g>
<g >
<title>BRAID.LISP&quot;) (10 samples, 0.01%)</title><rect x="971.8" y="197" width="0.2" height="15.0" fill="rgb(217,102,53)" rx="2" ry="2" />
<text  x="974.83" y="207.5" ></text>
</g>
<g >
<title>CALL-WITH-RECURSIVE-SYSTEM-LOCK (246 samples, 0.32%)</title><rect x="238.0" y="293" width="3.8" height="15.0" fill="rgb(243,204,33)" rx="2" ry="2" />
<text  x="240.95" y="303.5" ></text>
</g>
<g >
<title>COMPILE-IN-LEXENV (21 samples, 0.03%)</title><rect x="118.1" y="293" width="0.3" height="15.0" fill="rgb(242,186,41)" rx="2" ry="2" />
<text  x="121.06" y="303.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (23 samples, 0.03%)</title><rect x="822.5" y="293" width="0.3" height="15.0" fill="rgb(222,87,31)" rx="2" ry="2" />
<text  x="825.49" y="303.5" ></text>
</g>
<g >
<title>MAKE-NODE-CACHE (293 samples, 0.38%)</title><rect x="377.4" y="373" width="4.5" height="15.0" fill="rgb(238,24,36)" rx="2" ry="2" />
<text  x="380.35" y="383.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (13 samples, 0.02%)</title><rect x="118.2" y="133" width="0.2" height="15.0" fill="rgb(210,207,43)" rx="2" ry="2" />
<text  x="121.18" y="143.5" ></text>
</g>
<g >
<title>PCL (147 samples, 0.19%)</title><rect x="1162.9" y="213" width="2.3" height="15.0" fill="rgb(242,8,0)" rx="2" ry="2" />
<text  x="1165.92" y="223.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (147 samples, 0.19%)</title><rect x="1162.9" y="229" width="2.3" height="15.0" fill="rgb(232,203,19)" rx="2" ry="2" />
<text  x="1165.92" y="239.5" ></text>
</g>
<g >
<title>WELL-HEIGHT (67 samples, 0.09%)</title><rect x="1089.0" y="245" width="1.0" height="15.0" fill="rgb(230,75,29)" rx="2" ry="2" />
<text  x="1091.99" y="255.5" ></text>
</g>
<g >
<title>FULL-SQUARE-P (21 samples, 0.03%)</title><rect x="1088.7" y="245" width="0.3" height="15.0" fill="rgb(245,72,47)" rx="2" ry="2" />
<text  x="1091.67" y="255.5" ></text>
</g>
<g >
<title>TWO-ARG-AND (45 samples, 0.06%)</title><rect x="1170.9" y="229" width="0.7" height="15.0" fill="rgb(206,124,1)" rx="2" ry="2" />
<text  x="1173.94" y="239.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (9 samples, 0.01%)</title><rect x="118.2" y="69" width="0.2" height="15.0" fill="rgb(224,134,44)" rx="2" ry="2" />
<text  x="121.24" y="79.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (17 samples, 0.02%)</title><rect x="118.1" y="197" width="0.3" height="15.0" fill="rgb(225,67,45)" rx="2" ry="2" />
<text  x="121.12" y="207.5" ></text>
</g>
<g >
<title>EXPAND-WITH-THREADS (7,572 samples, 9.92%)</title><rect x="259.2" y="357" width="117.1" height="15.0" fill="rgb(229,7,6)" rx="2" ry="2" />
<text  x="262.22" y="367.5" >EXPAND-WITH-TH..</text>
</g>
<g >
<title>ARRAY-TOTAL-SIZE (11 samples, 0.01%)</title><rect x="1128.6" y="261" width="0.2" height="15.0" fill="rgb(241,167,34)" rx="2" ry="2" />
<text  x="1131.64" y="271.5" ></text>
</g>
<g >
<title>AGGREGATE-HEIGHT (4,048 samples, 5.30%)</title><rect x="910.0" y="277" width="62.6" height="15.0" fill="rgb(222,155,3)" rx="2" ry="2" />
<text  x="913.04" y="287.5" >AGGREG..</text>
</g>
<g >
<title>DESTROY-TREE (878 samples, 1.15%)</title><rect x="228.8" y="357" width="13.5" height="15.0" fill="rgb(253,5,30)" rx="2" ry="2" />
<text  x="231.75" y="367.5" ></text>
</g>
<g >
<title>%PUTHASH (8 samples, 0.01%)</title><rect x="379.5" y="309" width="0.1" height="15.0" fill="rgb(237,42,15)" rx="2" ry="2" />
<text  x="382.52" y="319.5" ></text>
</g>
<g >
<title>ASH (96 samples, 0.13%)</title><rect x="967.7" y="213" width="1.5" height="15.0" fill="rgb(233,181,22)" rx="2" ry="2" />
<text  x="970.72" y="223.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (15 samples, 0.02%)</title><rect x="118.1" y="165" width="0.3" height="15.0" fill="rgb(245,211,1)" rx="2" ry="2" />
<text  x="121.15" y="175.5" ></text>
</g>
<g >
<title>COMPILE (22 samples, 0.03%)</title><rect x="118.0" y="309" width="0.4" height="15.0" fill="rgb(235,105,13)" rx="2" ry="2" />
<text  x="121.04" y="319.5" ></text>
</g>
<g >
<title>FULL-SQUARE-P (7 samples, 0.01%)</title><rect x="1085.1" y="213" width="0.1" height="15.0" fill="rgb(253,45,17)" rx="2" ry="2" />
<text  x="1088.10" y="223.5" ></text>
</g>
<g >
<title>INSTALL-OPTIMIZED-CONSTRUCTOR (26 samples, 0.03%)</title><rect x="118.0" y="373" width="0.4" height="15.0" fill="rgb(214,156,1)" rx="2" ry="2" />
<text  x="120.98" y="383.5" ></text>
</g>
<g >
<title>DESTROY-TREE (1,035 samples, 1.36%)</title><rect x="226.3" y="373" width="16.0" height="15.0" fill="rgb(237,48,46)" rx="2" ry="2" />
<text  x="229.33" y="383.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (8 samples, 0.01%)</title><rect x="118.3" y="53" width="0.1" height="15.0" fill="rgb(236,194,49)" rx="2" ry="2" />
<text  x="121.26" y="63.5" ></text>
</g>
<g >
<title>WELL-HEIGHT (23 samples, 0.03%)</title><rect x="1187.7" y="261" width="0.3" height="15.0" fill="rgb(224,188,39)" rx="2" ry="2" />
<text  x="1190.67" y="271.5" ></text>
</g>
<g >
<title>HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS (161 samples, 0.21%)</title><rect x="1085.2" y="213" width="2.5" height="15.0" fill="rgb(212,109,50)" rx="2" ry="2" />
<text  x="1088.21" y="223.5" ></text>
</g>
<g >
<title>PCL (118 samples, 0.15%)</title><rect x="1181.7" y="229" width="1.8" height="15.0" fill="rgb(215,27,42)" rx="2" ry="2" />
<text  x="1184.70" y="239.5" ></text>
</g>
<g >
<title>foreign function syscall (1,080 samples, 1.41%)</title><rect x="359.4" y="261" width="16.7" height="15.0" fill="rgb(227,91,46)" rx="2" ry="2" />
<text  x="362.42" y="271.5" ></text>
</g>
<g >
<title>NUM-HOLES (6,265 samples, 8.21%)</title><rect x="1091.2" y="277" width="96.8" height="15.0" fill="rgb(239,17,29)" rx="2" ry="2" />
<text  x="1094.19" y="287.5" >NUM-HOLES</text>
</g>
<g >
<title>PCL (23 samples, 0.03%)</title><rect x="822.5" y="277" width="0.3" height="15.0" fill="rgb(243,14,45)" rx="2" ry="2" />
<text  x="825.49" y="287.5" ></text>
</g>
<g >
<title>%PUTHASH (112 samples, 0.15%)</title><rect x="380.1" y="293" width="1.7" height="15.0" fill="rgb(221,166,27)" rx="2" ry="2" />
<text  x="383.12" y="303.5" ></text>
</g>
<g >
<title>EMPTY-SQUARE-P (2,765 samples, 3.62%)</title><rect x="1128.9" y="261" width="42.7" height="15.0" fill="rgb(237,76,44)" rx="2" ry="2" />
<text  x="1131.90" y="271.5" >EMPT..</text>
</g>
<g >
<title>(FLET &quot;CLEANUP-FUN-69&quot; :IN SB-THREAD::CALL-WITH-RECURSIVE-SYSTEM-LOCK) (122 samples, 0.16%)</title><rect x="239.9" y="277" width="1.9" height="15.0" fill="rgb(253,180,28)" rx="2" ry="2" />
<text  x="242.87" y="287.5" ></text>
</g>
<g >
<title>POPULATE-CACHE (258 samples, 0.34%)</title><rect x="377.9" y="357" width="4.0" height="15.0" fill="rgb(219,205,15)" rx="2" ry="2" />
<text  x="380.89" y="367.5" ></text>
</g>
<g >
<title>WELL-HEIGHT (35 samples, 0.05%)</title><rect x="971.4" y="245" width="0.6" height="15.0" fill="rgb(242,153,34)" rx="2" ry="2" />
<text  x="974.45" y="255.5" ></text>
</g>
<g >
<title>(LAMBDA (SB-PCL::.ARG0.) :IN &quot;SYS:SRC (224 samples, 0.29%)</title><rect x="1076.8" y="213" width="3.4" height="15.0" fill="rgb(224,158,3)" rx="2" ry="2" />
<text  x="1079.75" y="223.5" ></text>
</g>
<g >
<title>SUB-FIND-SOURCE-PATHS (12 samples, 0.02%)</title><rect x="118.2" y="117" width="0.2" height="15.0" fill="rgb(208,68,49)" rx="2" ry="2" />
<text  x="121.19" y="127.5" ></text>
</g>
<g >
<title>MAX (16 samples, 0.02%)</title><rect x="734.5" y="309" width="0.3" height="15.0" fill="rgb(208,141,6)" rx="2" ry="2" />
<text  x="737.52" y="319.5" ></text>
</g>
<g >
<title>PROPAGATE-HEURISTIC-VALUES! (29,446 samples, 38.57%)</title><rect x="734.8" y="309" width="455.1" height="15.0" fill="rgb(246,138,40)" rx="2" ry="2" />
<text  x="737.76" y="319.5" >PROPAGATE-HEURISTIC-VALUES!</text>
</g>
<g >
<title>PCL (7 samples, 0.01%)</title><rect x="1034.0" y="213" width="0.1" height="15.0" fill="rgb(245,183,33)" rx="2" ry="2" />
<text  x="1036.98" y="223.5" ></text>
</g>
</g>
</svg>
